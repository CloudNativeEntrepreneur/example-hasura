# Default values for node projects.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: ghcr.io/cloudnativeentrepreneur/example-hasura
  tag: v0.10.1
  pullPolicy: IfNotPresent
# define environment variables here as a map of key: value
env:
secretEnv: staging
knativeDeploy: true
knative:
  minScale: 1
  maxScale: 3
runMigrations: true
runSeeds: false
service:
  name: example-hasura
  type: ClusterIP
  internalPort: 8080
  externalPort: 80
probePath: /healthz
livenessProbe:
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  failureThreshold: 1
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
resources:
  limits:
    cpu: '1'
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 512Mi
hasura:
  devMode: true
  psql:
    name: example-hasura-metadata-postgresql
    database: metadata
    username: postgres
    hostname:
      write: example-hasura-metadata-postgresql
      read: example-hasura-metadata-postgresql-repl
      pool: example-hasura-metadata-db-pgpool
    numberOfInstances: 1
    enableLogicalBackup: false
    enableShmVolume: true
    # we're using pgpool instead of pgbouncer with zalando pgo - so, we already have a connection pooler - don't enable.
    enableConnectionPooler: false
    enableReplicaConnectionPooler: false
    connectionPooler:
      maxDBConnections: 100
      numberOfInstances: 1
    istio:
      injection: false
    resources:
      requests:
        cpu: 10m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 512Mi
    # parameters generated by [pgtune](https://pgtune.leopard.in.ua/#/) based on resources and number of connections:
    # --------
    # DB Version: 13
    # OS Type: linux
    # DB Type: web
    # Total Memory (RAM): 512 MB
    # CPUs num: 1
    # Connections num: 115
    # Data Storage: ssd

    # must use strings!
    # max_connections should probably match psql.maxDBConnections + 15 for other various connections ^
    # if changing connections or resources, make sure to "retune".
    parameters:
      max_connections: "115"
      shared_buffers: 128MB
      effective_cache_size: 384MB
      maintenance_work_mem: 32MB
      checkpoint_completion_target: "0.9"
      wal_buffers: 3932kB
      default_statistics_target: "100"
      random_page_cost: "1.1"
      effective_io_concurrency: "200"
      work_mem: 569kB
      min_wal_size: 1GB
      max_wal_size: 4GB
    volume:
      size: 8Gi
readmodel:
  psql:
    name: example-readmodel-postgresql
    database: readmodel
    username: postgres
    hostname:
      write: example-readmodel-postgresql
      read: example-readmodel-postgresql-repl
      pool: example-readmodel-pgpool
sourced:
  psql:
    name: example-sourced-db-postgresql
    database: sourced
    username: postgres
    hostname:
      write: example-sourced-db-postgresql
      read: example-sourced-db-postgresql-repl
      pool: example-sourced-db-pgpool
web3auth:
  psql:
    name: web3auth-db-postgresql
    database: web3auth
    username: postgres
    hostname:
      write: web3auth-db-postgresql
      read: web3auth-db-postgresql-repl
      pool: web3auth-db-pgpool
